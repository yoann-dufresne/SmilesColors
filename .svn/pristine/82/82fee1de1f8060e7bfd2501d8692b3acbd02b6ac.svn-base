
function Loading () {};

// ---------- Loading functions ----------

Loading.prototype.readZip = function (blob, callback) {
	var zipfile = new ZipFile(blob.name);
	model.files[blob.name] = zipfile;
	
	var entriesAdder = function(entries) {
		for (var i=0 ; i<entries.length ; i++) {
			var entry = entries[i];
			zipfile.addEntry(entry);
		}
		callback(zipfile);
	}

	var readerF = function(reader) {
		reader.getEntries(entriesAdder);
	}
	var errorF = function(error) {};

	// Read zip files
	zip.createReader(
		new zip.BlobReader(blob),
		readerF,
		errorF
	);
}

Loading.prototype.filesSelect = function (evt) {
	var files = evt.target.files;
	var textarea = document.getElementById("fileslist").innerHTML;
	for (var i=0 ; i<files.length ; i++) {
		var zipfile = loading.readZip(files[i], loading.useDataLoaded);
		textarea += "<p>" + files[i].name + "</p>\n";
	}
	document.getElementById("fileslist").innerHTML = textarea;
};

Loading.prototype.init = function () {
	if (window.File && window.FileReader && window.FileList && window.Blob) {
		zip.workerScriptsPath = "lib/zip/";
		document.getElementById('files').addEventListener('change', this.filesSelect, false);
	} else {
		alert('The File APIs are not fully supported in this browser. Try again with firefox browser : https://www.mozilla.org');
	}
}



// ---------- Parsing functions ----------

Loading.prototype.useDataLoaded = function (zipfile) {
	loading.loadJson (zipfile, "coverage.json");
	loading.loadJson (zipfile, "matched.json");
	loading.loadJson (zipfile, "monomers.json");
	loading.loadJson (zipfile, "residues.json");
}

Loading.prototype.loadJson = function (zipFile, file) {
	var entry = zipFile.entries[file];
	entry.getData(
		new zip.TextWriter(),
		function (text) {
			text = text.split("\n").join('');
			zipFile.jsons[file] = eval (text);
			//console.log(text);
		}
	);
}





var loading = new Loading();
loading.init();
